server {
    listen 80;
    server_name image-viewer.com; # Replace with your desired domain

    # Proxy for Next.js static assets (e.g., _next/static, _next/image)
    location ~ ^/(_next|static|images)/ {
        proxy_pass http://host.docker.internal:32100; # Your Next.js app
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for the Next.js Image Viewer app
    location /image-viewer/ {
        proxy_pass http://host.docker.internal:32100/; # Your Next.js app
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Ensure trailing slash for proxy_pass to correctly map paths
        rewrite ^/image-viewer/(.*)$ /$1 break;
    }

    # Proxy for the ComfyUI app
    location /comfyui/ {
        proxy_pass http://host.docker.internal:8188/; # Your ComfyUI app
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # For websockets, which ComfyUI likely uses
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # Ensure trailing slash for proxy_pass to correctly map paths
        rewrite ^/comfyui/(.*)$ /$1 break;
    }

    # Optional: Redirect root to the image viewer
    location / {
        return 302 /image-viewer/;
    }
}